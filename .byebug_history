exit
JSON.parse(@result.body)["fuel_stations"]
JSON.parse(@result.body)
@response
JSON.parse(@response.body)
  @result = Faraday.get( "http://developer.nrel.gov/api/alt-fuel-stations/v1/nearest.json?api_key=#{ENV["nrel_api_key"]}&location=#{zip}&fuel_type=ELEC&LPG&offset=10")
new = service.get_nearest_fuel(zip)["fuel_stations"]
new = service.get_nearest_fuel(zip)
JSON.parse(new)
new = new["fuel_stations"]
new
new["fuel_stations"]
new = service.get_nearest_fuel(zip)
service.get_nearest_fuel(zip).class
service.get_nearest_fuel(zip)
zip = "80203"
service = NrelService.new
Location.by_zip(params["q"])
@locations
exit
new["fuel_stations"].first["station_name"]
new["fuel_stations"].first
new["fuel_stations"]
new["fuel_stations"]["station_name"]
new["station_name"]
new.class
new = service.get_nearest_fuel(zip)
service.get_nearest_fuel(zip)
service.get_nearest_fuel(zip).map {|l| Location.new(l)}
zip = "80201"
service.get_nearest_fuel(zip).map {|l| Location.new(l)}
service = NrelService.new
Location.by_zip("80210")
Location.by_zip
Location.by_zip(params["q"])
exit
Location.by_zip("80203")
Location.by_zip(80203)
Location.by_zip(params["q"])
exit
Location.by_zip(params["q"])
params
exit
exut
attributes
exit
params
attributes
exit
@location
service
exit
Location.by_zip(80203)
exit
params["q"]
params
exit
f["station_name"]
f.station_name
f["statiion_name"]
f = @data.first
@data.first
@data
exit
@data
exit
data["fuel_stations"].class
data["fuel_stations"]
data["fuel_stations]
data.class
data
exit
JSON.parse(response.body).class
JSON.parse(response.body)
JSON.parse(response.body_
nearest.class
nearest
response.body.class
nearest
exit
result["name"]
result.name
result
exit
result
exit
data["fuel_stations"].second["fuel_type_code"]
data["fuel_stations"].second["street_address"]
data["fuel_stations"].second["address"]
data["fuel_stations"].second["station_name"]
data["fuel_stations"].second["stations_name"]
data["fuel_stations"].second
data["fuel_stations"].each {|name| puts data["fuel_station"]["station_name"]}
data["fuel_stations"].each {|name| puts data[}
data["fuel_stations"].each {|name| puts "station_name"}
data["fuel_stations"].first["station_name"]
data["fuel_stations"].each {|name| puts station_name}
data["fuel_stations"].first["station_name"]
data["fuel_stations"].first
data["fuel_stations"].class
data["fuel_stations"].each {|name| puts name}
data["fuel_stations"].each {|name| name}
data["fuel_stations"].each {|name|}
data["fuel_stations"]
@result
data
@result
exit
data["fuel_stations"].each do |name|
data["fuel_stations"]
@result
exit
result["fuel_stations"].first["station_name"]
result["fuel_stations"].first
result["fuel_stations"]
results["fuel_stations"]
result
result = JSON.parse(@data)
result = _
JSON.parse(@data)
JSON.parse(data)
@data.station_count
@data
exit
@data
response.body
response
@response.
@data.first
@data["fuel_stations"][0]
@data["fuel_stations"]
@data[:fuel_stations]
@data
exit
JSON.parse(response.body)
response.body
response
exit
response.body
response
